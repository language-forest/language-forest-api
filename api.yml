openapi: 3.0.3
info:
  title: Sample API
  version: 1.0.0

paths:
  /auth/google:
    post:
      tags:
        - auth
      summary: "Google 로그인을 요청합니다."
      operationId: "googleLogin"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenDto"
      responses:
        "200":
          description: JWT 토큰 발급 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenDto"

  /auth/refresh:
    post:
      tags:
        - auth
      summary: "서버에서 발급한 refresh token을 통해 accessToken을 다시 받아옵니다."
      operationId: "authRefresh"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  description: "리프레시 토큰"
              required:
                - refreshToken
      responses:
        "200":
          description: JWT 토큰 발급 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenDto"

  /user-info/me:
    get:
      tags:
        - user
      summary: "내 유저 정보를 가져옵니다."
      operationId: "getUserInfoMe"
      responses:
        "200":
          description: "유저 정보 조회 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfoDto"

  /user-info:
    post:
      tags:
        - user
      summary: "최초에 유저 언어 학습정보를 포함한 유저 정보를 생성합니다"
      operationId: "createUserInfo"
      description: "최초 유저 회원가입 때 사용하는 api입니다"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/BaseUser"
                - type: object
                  properties:
                    id:
                      readOnly: true
                    studyLanguages:
                      type: array
                      items:
                        allOf:
                          - $ref: "#/components/schemas/BaseUserStudyLanguage"
                          - type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                                nullable: true
                                readOnly: true
                            required:
                              - uid
                              - language
                              - level
                              - purpose
      responses:
        "200":
          description: "업데이트 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfoDto"

  /user:
    patch:
      tags:
        - user
      summary: "유저에 대한 정보를 수정합니다."
      operationId: "updateUser"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BaseUser"
      responses:
        "201":
          description: "업데이트 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseUser"

  /user/study-language/{userStudyLanguageId}:
    patch:
      tags:
        - user
      summary: "유저의 학습에 대한 정보를 변경합니다"
      operationId: "updateUserStudyLanguage"
      parameters:
        - name: userStudyLanguageId
          in: path
          required: true
          description: "수정할 유저 학습 언어 정보의 ID"
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserStudyLanguageRequest"
      responses:
        "201":
          description: "업데이트 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseUserStudyLanguage"

components:
  schemas:
    # 공통 타임스탬프 스키마
    Timestamped:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          description: "생성 일시"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: "수정 일시"
          readOnly: true
        deletedAt:
          type: string
          format: date-time
          description: "삭제 일시"
          readOnly: true
      required: [createdAt, updateAt]

    TokenDto:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
      required: [accessToken]

    BaseUserStudyLanguage:
      allOf:
        - $ref: "#/components/schemas/Timestamped"
        - type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            uid:
              type: string
              format: uuid
              readOnly: true
            language:
              $ref: "#/components/schemas/LanguageEnum"
            level:
              $ref: "#/components/schemas/LevelEnum"
            purpose:
              type: string
              description: "학습 목적"
          required: [id, uid, language, level, purpose]

    UpdateUserStudyLanguageRequest:
      allOf:
        - $ref: "#/components/schemas/BaseUserStudyLanguage"
        - type: object
          properties:
            language:
              $ref: "#/components/schemas/LanguageEnum"
              nullable: true
            level:
              $ref: "#/components/schemas/LevelEnum"
              nullable: true
            purpose:
              type: string
              nullable: true
          required: [uid, language, level, purpose]

    BaseUser:
      allOf:
        - $ref: "#/components/schemas/Timestamped"
        - type: object
          properties:
            id:
              type: string
              format: uuid
              description: "유저 ID"
            email:
              type: string
              description: "유저 이메일"
            username:
              type: string
              description: "유저 이름"
            birthday:
              type: string
              format: date
              description: "유저 생년월일 (yyyy-MM-dd)"
            gender:
              type: string
              enum: [MALE, FEMALE, OTHER]
              description: "유저 성별"
            language:
              type: string
              enum: [EN, KO]
              description: "학습 언어"
          required: [id]

    UserInfoDto:
      allOf:
        - $ref: "#/components/schemas/BaseUser"
        - type: object
          properties:
            studyLanguages:
              type: array
              items:
                $ref: "#/components/schemas/BaseUserStudyLanguage"

    LanguageEnum:
      type: string
      enum: [EN, KO]
      description: "학습 언어"

    LevelEnum:
      type: string
      enum: [EASY, NORMAL, HARD]
      description: "학습 레벨"

    GenderEnum:
      type: string
      enum: [MALE, FEMALE, OTHER]
      description: "유저 성별"
